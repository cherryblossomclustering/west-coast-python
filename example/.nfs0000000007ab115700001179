[?1049h[?1h=[1;49r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[49;1H"generate_settings_xml.py" 97L, 2510C[1;1H[34m#!/bin/usr/python[m

[35mfrom[m os [35mimport[m listdir
[35mfrom[m os.path [35mimport[m isfile, join
[35mfrom[m collections [35mimport[m OrderedDict
[35mimport[m pprint

[34m# hard-coded[m
version=[31m'1.5.5'[m
mypath = [31m'./outputs/D2'[m
model_root = [31m'/dropbox/16-17/573/Data/models/devtest'[m

[38;5;130mdef[m [36mmerge_two_dicts[m(x, y):
    [31m"""Given two dicts, merge them into a new dict as a shallow copy."""[m
    z = x.copy()
    z.update(y)
    [38;5;130mreturn[m z

[38;5;130mclass[m [36mVividict[m(OrderedDict):
    [38;5;130mdef[m [36m__missing__[m(self, key):[21;9Hvalue = self[key] = [36mtype[m(self)()[22;9H[38;5;130mreturn[m value

[38;5;130mdef[m [36mrecursive_print[m(dict1, dict2, depth, string):
    [38;5;130mfor[m k, v [38;5;130min[m dict1.items():[26;9H[38;5;130mif[m depth == [31m3[m:[28;13Hnew_string = string + [31m"."[m + k[31;13H[36mprint[m([31m"<EVAL ID=[m[35m\"[m[31m%s[m[35m\"[m[31m>"[m % (new_string))[32;13H[36mprint[m([31m"<PEER-ROOT>"[m)[33;13H[36mprint[m(mypath)[34;13H[36mprint[m([31m"</PEER-ROOT>"[m)[35;13H[36mprint[m([31m"<MODEL-ROOT>"[m)[36;13H[36mprint[m(model_root)[37;13H[36mprint[m([31m"</MODEL-ROOT>"[m)[38;13H[34m# print(string)[m[40;13H[36mprint[m([31m"<INPUT-FORMAT TYPE=[m[35m\"[m[31mSPL[m[35m\"[m[31m>"[m)[41;13H[36mprint[m([31m"</INPUT-FORMAT>"[m)[42;13H[36mprint[m([31m"<PEERS>"[m)[44;13H[38;5;130mfor[m x, y [38;5;130min[m v.items():[45;17H[36mprint[m([31m"<P ID=[m[35m\"[m[31m%s[m[35m\"[m[31m>%s</P>"[m % (x, [31m"."[m.join([new_string, x])))[46;17H[34m# print(x)[m[48;13H[36mprint[m([31m"</PEERS>"[m)[49;67H1,1[11CTop[1;1H[?12l[?25h[?25l[49;1HType  :quit<Enter>  to exit Vim[49;33H[K[49;67H1,1[11CTop[1;1H[?12l[?25h[49;1H
[?1l>[?1049l